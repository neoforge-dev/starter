# Dependency Security Scanning Configuration
# Comprehensive vulnerability assessment for project dependencies

# Python dependency scanning (Safety, Bandit, pip-audit)
python:
  safety:
    # Safety configuration for Python packages
    ignore:
      # Ignore specific vulnerability IDs if needed (with justification)
      # - 12345  # Justification: False positive in development dependency

    # Minimum severity level to report
    minimum_severity: medium

    # Check full requirements.txt recursively
    full_report: true

    # JSON output for CI/CD integration
    output_format: json

    # Include development dependencies
    include_dev: true

    # Database sources
    databases:
      - pyup.io
      - github_advisory

  bandit:
    # Bandit SAST configuration for Python
    config: |
      tests:
        - B101  # Use of assert detected
        - B102  # exec_used
        - B103  # set_bad_file_permissions
        - B104  # hardcoded_bind_all_interfaces
        - B105  # hardcoded_password_string
        - B106  # hardcoded_password_funcarg
        - B107  # hardcoded_password_default
        - B108  # hardcoded_tmp_directory
        - B110  # try_except_pass
        - B112  # try_except_continue
        - B201  # flask_debug_true
        - B301  # pickle
        - B302  # marshal
        - B303  # md5
        - B304  # des
        - B305  # cipher
        - B306  # mktemp_q
        - B307  # eval
        - B308  # mark_safe
        - B309  # httpsconnection
        - B310  # urllib_urlopen
        - B311  # random
        - B312  # telnetlib
        - B313  # xml_bad_cElementTree
        - B314  # xml_bad_ElementTree
        - B315  # xml_bad_expatreader
        - B316  # xml_bad_expatbuilder
        - B317  # xml_bad_sax
        - B318  # xml_bad_minidom
        - B319  # xml_bad_pulldom
        - B320  # xml_bad_etree
        - B321  # ftplib
        - B322  # input
        - B323  # unverified_context
        - B324  # hashlib_new_insecure_functions
        - B325  # tempnam
        - B401  # import_telnetlib
        - B402  # import_ftplib
        - B403  # import_pickle
        - B404  # import_subprocess
        - B405  # import_xml_etree
        - B406  # import_xml_sax
        - B407  # import_xml_expat
        - B408  # import_xml_minidom
        - B409  # import_xml_pulldom
        - B410  # import_lxml
        - B411  # import_xmlrpclib
        - B412  # import_httpoxy
        - B413  # import_pycrypto
        - B501  # request_with_no_cert_validation
        - B502  # ssl_with_bad_version
        - B503  # ssl_with_bad_defaults
        - B504  # ssl_with_no_version
        - B505  # weak_cryptographic_key
        - B506  # yaml_load
        - B507  # ssh_no_host_key_verification
        - B601  # paramiko_calls
        - B602  # subprocess_popen_with_shell_equals_true
        - B603  # subprocess_without_shell_equals_true
        - B604  # any_other_function_with_shell_equals_true
        - B605  # start_process_with_a_shell
        - B606  # start_process_with_no_shell
        - B607  # start_process_with_partial_path
        - B608  # hardcoded_sql_expressions
        - B609  # linux_commands_wildcard_injection
        - B610  # django_extra_used
        - B611  # django_rawsql_used
        - B701  # jinja2_autoescape_false
        - B702  # use_of_mako_templates
        - B703  # django_mark_safe

    # Skip paths
    exclude_dirs:
      - tests
      - test
      - __pycache__
      - .pytest_cache
      - htmlcov

    # Severity levels
    severity: medium

    # Output format
    format: json

# Node.js dependency scanning (npm audit, yarn audit, Snyk)
javascript:
  npm_audit:
    # npm audit configuration
    audit_level: moderate  # info, low, moderate, high, critical

    # Production dependencies only
    production_only: false

    # JSON output for parsing
    output_format: json

    # Registry configuration
    registry: https://registry.npmjs.org/

  license_checker:
    # License compliance checking
    allowed_licenses:
      - MIT
      - Apache-2.0
      - BSD-2-Clause
      - BSD-3-Clause
      - ISC
      - CC0-1.0
      - Unlicense

    # Prohibited licenses that will fail the build
    prohibited_licenses:
      - GPL-3.0
      - AGPL-3.0
      - LGPL-3.0
      - WTFPL

    # Custom license handling
    custom_format:
      json: true
      csv: false

    # Exclude packages from license check
    excludes:
      - dev-dependencies  # Exclude dev dependencies from strict license checking

# Snyk integration configuration
snyk:
  # API settings
  api_version: "2023-06-19"

  # Scan configuration
  severity_threshold: medium
  fail_on: all  # upgradable, patchable, all

  # Monitoring
  monitor: true

  # Test configuration
  test:
    include_dev_deps: false

  # Policy file location
  policy_file: .snyk

  # Ignore unfixable vulnerabilities
  ignore_unfixable: false

# General dependency scanning settings
global:
  # Maximum severity level that will fail the build
  fail_on_severity: high

  # Retry configuration
  retry_attempts: 3
  retry_delay: 5  # seconds

  # Timeout settings
  timeout: 300  # seconds

  # Cache configuration
  cache:
    enabled: true
    ttl: 3600  # 1 hour

  # Reporting
  report:
    format: json
    include_dev_deps: true
    include_licenses: true
    include_cvss_score: true

  # Integration settings
  integration:
    github_security_advisories: true
    nvd_database: true
    oss_index: true
