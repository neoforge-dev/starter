version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      target: development
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  frontend_test:
    build:
      context: ./frontend
      target: development
    command: npm run test:watch
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=test
      - CI=true
    depends_on:
      frontend:
        condition: service_healthy

  api:
    build:
      context: ./backend
      target: development
    ports:
      - "${API_PORT:-8000}:8000"
    volumes:
      - ./backend:/app
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/neoforge
      - REDIS_URL=redis://cache:6379/0
    depends_on:
      - db
      - cache
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  api_test:
    build:
      context: ./backend
      target: development
    command: pytest
    volumes:
      - ./backend:/app
    environment:
      - ENVIRONMENT=test
      - DATABASE_URL=postgresql://postgres:postgres@db_test:5432/neoforge_test
      - REDIS_URL=redis://cache:6379/1
    depends_on:
      - db_test
      - cache

  db:
    image: postgres:15-alpine
    ports:
      - "${DB_PORT:-55432}:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=neoforge
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  db_test:
    image: postgres:15-alpine
    ports:
      - "${DB_TEST_PORT:-55433}:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=neoforge_test
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  cache:
    image: redis:alpine
    ports:
      - "${REDIS_PORT:-56379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  email-worker:
    build:
      context: ./backend
      target: development
    command: python -m app.worker.run_worker
    volumes:
      - ./backend:/app
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/neoforge
      - REDIS_URL=redis://cache:6379/0
      - SECRET_KEY=dev_secret_key_replace_in_production_7e1a34bd93b148f0
      - CORS_ORIGINS=["http://localhost:3000", "http://localhost:8000"]
      - SMTP_USER=${SMTP_USER:-neoforge@example.com}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-password}
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - db
      - cache
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
