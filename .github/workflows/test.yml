name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  unit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        shard: [1, 2, 3] # Split unit tests into 3 shards

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install Dependencies
        working-directory: frontend
        run: npm ci

      - name: Run Unit Tests
        working-directory: frontend
        run: npm run test -- --shard=${{ matrix.shard }}/3

      - name: Upload Coverage
        if: matrix.shard == 1
        uses: codecov/codecov-action@v5
        with:
          directory: frontend/coverage/
          flags: frontend-unit
          name: frontend-unit-coverage

  visual:
    runs-on: ubuntu-latest
    needs: unit

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install Dependencies
        working-directory: frontend
        run: npm ci

      - name: Install Playwright
        working-directory: frontend
        run: npx playwright install --with-deps

      - name: Run Visual Tests
        working-directory: frontend
        run: npm run test:visual

      - name: Upload Visual Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: visual-test-results
          path: frontend/playwright-report/

  a11y:
    runs-on: ubuntu-latest
    needs: unit

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install Dependencies
        working-directory: frontend
        run: npm ci

      - name: Install Playwright
        working-directory: frontend
        run: npx playwright install --with-deps

      - name: Run A11y Tests
        working-directory: frontend
        run: npm run test:a11y

      - name: Upload A11y Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: a11y-test-results
          path: frontend/playwright-report/

  performance:
    runs-on: ubuntu-latest
    needs: unit

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install Dependencies
        working-directory: frontend
        run: npm ci

      - name: Run Performance Tests
        working-directory: frontend
        run: |
          # Warm up the environment
          node --expose-gc -e 'global.gc()'
          npm run test:perf

      - name: Upload Performance Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: performance-results
          path: frontend/test-results/

  report:
    needs: [unit, visual, a11y, performance]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Generate Combined Report
        run: |
          echo "# Test Results" > report.md
          echo "## Unit Tests" >> report.md
          cat artifacts/test-results/summary.txt >> report.md || echo "No unit test results" >> report.md
          echo "## Visual Tests" >> report.md
          cat artifacts/visual-test-results/summary.txt >> report.md || echo "No visual test results" >> report.md
          echo "## A11y Tests" >> report.md
          cat artifacts/a11y-test-results/summary.txt >> report.md || echo "No a11y test results" >> report.md
          echo "## Performance Tests" >> report.md
          cat artifacts/performance-results/summary.txt >> report.md || echo "No performance test results" >> report.md

      - name: Upload Combined Report
        uses: actions/upload-artifact@v4
        with:
          name: combined-test-report
          path: report.md
