import { html, css } from "lit";
import { BaseComponent } from "../base-component.js";
import { baseStyles } from "../styles/base.js";
import "../atoms/button/button.js";
import "../atoms/icon/icon.js";
import "../molecules/search-bar/search-bar.js";
import "../molecules/user-profile-summary/user-profile-summary.js";
import "../molecules/navigation-link/navigation-link.js";
import "../molecules/badge-counter/badge-counter.js";

/**
 * Enhanced dashboard layout component with responsive design and modern navigation
 * @element neo-dashboard-layout
 * 
 * @prop {Object} user - Current user data
 * @prop {Array} navigationItems - Main navigation items
 * @prop {Array} quickActions - Quick action buttons
 * @prop {boolean} sidebarCollapsed - Whether sidebar is collapsed
 * @prop {boolean} showSearch - Show global search
 * @prop {boolean} showNotifications - Show notification center
 * @prop {number} notificationCount - Unread notification count
 * @prop {string} currentPage - Current active page
 * @prop {boolean} mobileMenuOpen - Mobile menu state
 * @prop {string} logo - Logo image URL
 * @prop {string} logoText - Logo text fallback
 * @prop {Object} breadcrumbs - Breadcrumb navigation data
 * @prop {boolean} showBreadcrumbs - Show breadcrumb navigation
 * @prop {Array} userMenuItems - User dropdown menu items
 * @prop {boolean} darkMode - Dark mode toggle state
 * @prop {Object} settings - Layout settings
 * 
 * @fires neo-dashboard-navigate - When navigation occurs
 * @fires neo-dashboard-search - When search is performed
 * @fires neo-dashboard-notification-click - When notifications are clicked
 * @fires neo-dashboard-user-menu - When user menu is interacted with
 * @fires neo-dashboard-sidebar-toggle - When sidebar is toggled
 * @fires neo-dashboard-mobile-menu-toggle - When mobile menu is toggled
 * @fires neo-dashboard-quick-action - When quick action is performed
 */
export class NeoDashboardLayout extends BaseComponent {
  static get properties() {
    return {
      user: { type: Object },
      navigationItems: { type: Array, attribute: 'navigation-items' },
      quickActions: { type: Array, attribute: 'quick-actions' },
      sidebarCollapsed: { type: Boolean, attribute: 'sidebar-collapsed' },
      showSearch: { type: Boolean, attribute: 'show-search' },
      showNotifications: { type: Boolean, attribute: 'show-notifications' },
      notificationCount: { type: Number, attribute: 'notification-count' },
      currentPage: { type: String, attribute: 'current-page' },
      mobileMenuOpen: { type: Boolean, attribute: 'mobile-menu-open' },
      logo: { type: String },
      logoText: { type: String, attribute: 'logo-text' },
      breadcrumbs: { type: Object },
      showBreadcrumbs: { type: Boolean, attribute: 'show-breadcrumbs' },
      userMenuItems: { type: Array, attribute: 'user-menu-items' },
      darkMode: { type: Boolean, attribute: 'dark-mode' },
      settings: { type: Object },\n      _isUserMenuOpen: { type: Boolean, state: true },\n      _isMobile: { type: Boolean, state: true },\n    };\n  }\n\n  static get styles() {\n    return [\n      baseStyles,\n      css`\n        :host {\n          display: block;\n          height: 100vh;\n          background: var(--color-gray-50);\n          overflow: hidden;\n        }\n\n        .dashboard-container {\n          display: grid;\n          grid-template-areas: \n            \"sidebar header\"\n            \"sidebar main\";\n          grid-template-columns: var(--sidebar-width, 280px) 1fr;\n          grid-template-rows: var(--header-height, 64px) 1fr;\n          height: 100vh;\n          transition: grid-template-columns var(--transition-normal);\n        }\n\n        :host([sidebar-collapsed]) .dashboard-container {\n          grid-template-columns: 64px 1fr;\n        }\n\n        :host([mobile-menu-open]) .dashboard-container {\n          grid-template-columns: 280px 1fr;\n        }\n\n        /* Header */\n        .dashboard-header {\n          grid-area: header;\n          background: var(--color-surface);\n          border-bottom: 1px solid var(--color-border);\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          padding: 0 var(--spacing-lg);\n          z-index: var(--z-index-header);\n          position: relative;\n        }\n\n        .header-left {\n          display: flex;\n          align-items: center;\n          gap: var(--spacing-md);\n          flex: 1;\n        }\n\n        .header-center {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          flex: 2;\n          max-width: 600px;\n        }\n\n        .header-right {\n          display: flex;\n          align-items: center;\n          gap: var(--spacing-sm);\n          flex: 1;\n          justify-content: flex-end;\n        }\n\n        .mobile-menu-toggle {\n          display: none;\n        }\n\n        .logo-section {\n          display: flex;\n          align-items: center;\n          gap: var(--spacing-sm);\n          text-decoration: none;\n          color: inherit;\n        }\n\n        .logo-image {\n          height: 32px;\n          width: auto;\n        }\n\n        .logo-text {\n          font-size: var(--font-size-lg);\n          font-weight: var(--font-weight-bold);\n          color: var(--color-primary);\n        }\n\n        .search-section {\n          flex: 1;\n          max-width: 400px;\n        }\n\n        .quick-actions {\n          display: flex;\n          align-items: center;\n          gap: var(--spacing-xs);\n        }\n\n        .user-controls {\n          display: flex;\n          align-items: center;\n          gap: var(--spacing-sm);\n          position: relative;\n        }\n\n        .notification-button {\n          position: relative;\n        }\n\n        .user-menu-container {\n          position: relative;\n        }\n\n        .user-menu-trigger {\n          background: none;\n          border: none;\n          cursor: pointer;\n          border-radius: var(--radius-full);\n          padding: var(--spacing-xs);\n          transition: background var(--transition-fast);\n        }\n\n        .user-menu-trigger:hover {\n          background: var(--color-gray-100);\n        }\n\n        .user-menu {\n          position: absolute;\n          top: 100%;\n          right: 0;\n          margin-top: var(--spacing-xs);\n          background: var(--color-surface);\n          border: 1px solid var(--color-border);\n          border-radius: var(--radius-md);\n          box-shadow: var(--shadow-lg);\n          min-width: 220px;\n          z-index: var(--z-index-dropdown);\n          overflow: hidden;\n        }\n\n        .user-menu-header {\n          padding: var(--spacing-md);\n          border-bottom: 1px solid var(--color-border);\n          background: var(--color-gray-25);\n        }\n\n        .user-menu-item {\n          display: flex;\n          align-items: center;\n          gap: var(--spacing-sm);\n          width: 100%;\n          padding: var(--spacing-sm) var(--spacing-md);\n          border: none;\n          background: none;\n          text-align: left;\n          cursor: pointer;\n          transition: background var(--transition-fast);\n          color: var(--color-text);\n          text-decoration: none;\n        }\n\n        .user-menu-item:hover {\n          background: var(--color-gray-50);\n        }\n\n        .user-menu-divider {\n          height: 1px;\n          background: var(--color-border);\n          margin: var(--spacing-xs) 0;\n        }\n\n        /* Sidebar */\n        .dashboard-sidebar {\n          grid-area: sidebar;\n          background: var(--color-surface);\n          border-right: 1px solid var(--color-border);\n          display: flex;\n          flex-direction: column;\n          overflow: hidden;\n          z-index: var(--z-index-sidebar);\n        }\n\n        .sidebar-content {\n          flex: 1;\n          overflow-y: auto;\n          padding: var(--spacing-md);\n        }\n\n        .sidebar-section {\n          margin-bottom: var(--spacing-lg);\n        }\n\n        .sidebar-section:last-child {\n          margin-bottom: 0;\n        }\n\n        .section-title {\n          font-size: var(--font-size-sm);\n          font-weight: var(--font-weight-medium);\n          color: var(--color-text-light);\n          text-transform: uppercase;\n          letter-spacing: 0.05em;\n          margin-bottom: var(--spacing-sm);\n          padding: 0 var(--spacing-sm);\n          transition: opacity var(--transition-fast);\n        }\n\n        :host([sidebar-collapsed]) .section-title {\n          opacity: 0;\n          height: 0;\n          margin: 0;\n          overflow: hidden;\n        }\n\n        .navigation-items {\n          display: flex;\n          flex-direction: column;\n          gap: var(--spacing-xs);\n        }\n\n        .sidebar-toggle {\n          position: absolute;\n          top: var(--spacing-md);\n          right: -12px;\n          width: 24px;\n          height: 24px;\n          border-radius: var(--radius-full);\n          background: var(--color-surface);\n          border: 1px solid var(--color-border);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          cursor: pointer;\n          transition: all var(--transition-fast);\n          z-index: 1;\n        }\n\n        .sidebar-toggle:hover {\n          background: var(--color-gray-50);\n          transform: scale(1.1);\n        }\n\n        .toggle-icon {\n          width: 12px;\n          height: 12px;\n          transition: transform var(--transition-fast);\n        }\n\n        :host([sidebar-collapsed]) .toggle-icon {\n          transform: rotate(180deg);\n        }\n\n        /* Main content */\n        .dashboard-main {\n          grid-area: main;\n          overflow: hidden;\n          display: flex;\n          flex-direction: column;\n        }\n\n        .main-header {\n          background: var(--color-surface);\n          padding: var(--spacing-md) var(--spacing-lg);\n          border-bottom: 1px solid var(--color-border);\n        }\n\n        .page-title {\n          font-size: var(--font-size-xl);\n          font-weight: var(--font-weight-semibold);\n          color: var(--color-text);\n          margin: 0 0 var(--spacing-sm) 0;\n        }\n\n        .breadcrumb-nav {\n          font-size: var(--font-size-sm);\n          color: var(--color-text-light);\n        }\n\n        .breadcrumb-link {\n          color: var(--color-primary);\n          text-decoration: none;\n        }\n\n        .breadcrumb-link:hover {\n          text-decoration: underline;\n        }\n\n        .main-content {\n          flex: 1;\n          overflow-y: auto;\n          padding: var(--spacing-lg);\n        }\n\n        /* Mobile overlay */\n        .mobile-overlay {\n          display: none;\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background: rgba(0, 0, 0, 0.5);\n          z-index: var(--z-index-overlay);\n        }\n\n        /* Responsive design */\n        @media (max-width: 768px) {\n          .dashboard-container {\n            grid-template-areas: \n              \"header\"\n              \"main\";\n            grid-template-columns: 1fr;\n            grid-template-rows: var(--header-height, 64px) 1fr;\n          }\n\n          .dashboard-sidebar {\n            position: fixed;\n            top: 0;\n            left: 0;\n            height: 100vh;\n            width: 280px;\n            transform: translateX(-100%);\n            transition: transform var(--transition-normal);\n            z-index: var(--z-index-overlay);\n          }\n\n          :host([mobile-menu-open]) .dashboard-sidebar {\n            transform: translateX(0);\n          }\n\n          :host([mobile-menu-open]) .mobile-overlay {\n            display: block;\n          }\n\n          .mobile-menu-toggle {\n            display: block;\n          }\n\n          .header-center {\n            display: none;\n          }\n\n          .quick-actions {\n            display: none;\n          }\n\n          .sidebar-toggle {\n            display: none;\n          }\n        }\n\n        @media (max-width: 480px) {\n          .dashboard-header {\n            padding: 0 var(--spacing-md);\n          }\n\n          .main-content {\n            padding: var(--spacing-md);\n          }\n\n          .logo-text {\n            display: none;\n          }\n        }\n\n        /* Dark mode */\n        :host([dark-mode]) {\n          --color-surface: var(--color-gray-900);\n          --color-text: var(--color-gray-100);\n          --color-text-light: var(--color-gray-400);\n          --color-border: var(--color-gray-700);\n          --color-gray-50: var(--color-gray-800);\n          --color-gray-25: var(--color-gray-850);\n        }\n      `,\n    ];\n  }\n\n  constructor() {\n    super();\n    this.user = null;\n    this.navigationItems = [];\n    this.quickActions = [];\n    this.sidebarCollapsed = false;\n    this.showSearch = true;\n    this.showNotifications = true;\n    this.notificationCount = 0;\n    this.currentPage = '';\n    this.mobileMenuOpen = false;\n    this.logo = '';\n    this.logoText = 'Dashboard';\n    this.breadcrumbs = null;\n    this.showBreadcrumbs = false;\n    this.userMenuItems = [];\n    this.darkMode = false;\n    this.settings = {};\n    this._isUserMenuOpen = false;\n    this._isMobile = false;\n    \n    this._boundHandleDocumentClick = this._handleDocumentClick.bind(this);\n    this._boundHandleResize = this._handleResize.bind(this);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    document.addEventListener('click', this._boundHandleDocumentClick);\n    window.addEventListener('resize', this._boundHandleResize);\n    this._checkMobile();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    document.removeEventListener('click', this._boundHandleDocumentClick);\n    window.removeEventListener('resize', this._boundHandleResize);\n  }\n\n  /**\n   * Handle document click to close menus\n   */\n  _handleDocumentClick(e) {\n    if (!this.contains(e.target)) {\n      this._isUserMenuOpen = false;\n      if (this._isMobile) {\n        this.mobileMenuOpen = false;\n      }\n    }\n  }\n\n  /**\n   * Handle window resize\n   */\n  _handleResize() {\n    this._checkMobile();\n  }\n\n  /**\n   * Check if mobile viewport\n   */\n  _checkMobile() {\n    this._isMobile = window.innerWidth <= 768;\n    if (!this._isMobile) {\n      this.mobileMenuOpen = false;\n    }\n  }\n\n  /**\n   * Toggle sidebar\n   */\n  _toggleSidebar() {\n    this.sidebarCollapsed = !this.sidebarCollapsed;\n    \n    this.dispatchEvent(new CustomEvent('neo-dashboard-sidebar-toggle', {\n      detail: { collapsed: this.sidebarCollapsed },\n      bubbles: true,\n      composed: true\n    }));\n  }\n\n  /**\n   * Toggle mobile menu\n   */\n  _toggleMobileMenu() {\n    this.mobileMenuOpen = !this.mobileMenuOpen;\n    \n    this.dispatchEvent(new CustomEvent('neo-dashboard-mobile-menu-toggle', {\n      detail: { open: this.mobileMenuOpen },\n      bubbles: true,\n      composed: true\n    }));\n  }\n\n  /**\n   * Handle navigation\n   */\n  _handleNavigation(e) {\n    if (this._isMobile) {\n      this.mobileMenuOpen = false;\n    }\n    \n    this.dispatchEvent(new CustomEvent('neo-dashboard-navigate', {\n      detail: e.detail,\n      bubbles: true,\n      composed: true\n    }));\n  }\n\n  /**\n   * Handle search\n   */\n  _handleSearch(e) {\n    this.dispatchEvent(new CustomEvent('neo-dashboard-search', {\n      detail: e.detail,\n      bubbles: true,\n      composed: true\n    }));\n  }\n\n  /**\n   * Handle notification click\n   */\n  _handleNotificationClick() {\n    this.dispatchEvent(new CustomEvent('neo-dashboard-notification-click', {\n      detail: { count: this.notificationCount },\n      bubbles: true,\n      composed: true\n    }));\n  }\n\n  /**\n   * Toggle user menu\n   */\n  _toggleUserMenu(e) {\n    e.stopPropagation();\n    this._isUserMenuOpen = !this._isUserMenuOpen;\n  }\n\n  /**\n   * Handle user menu action\n   */\n  _handleUserMenuAction(action, e) {\n    e.stopPropagation();\n    this._isUserMenuOpen = false;\n    \n    this.dispatchEvent(new CustomEvent('neo-dashboard-user-menu', {\n      detail: { action, user: this.user },\n      bubbles: true,\n      composed: true\n    }));\n  }\n\n  /**\n   * Handle quick action\n   */\n  _handleQuickAction(action, e) {\n    this.dispatchEvent(new CustomEvent('neo-dashboard-quick-action', {\n      detail: { action },\n      bubbles: true,\n      composed: true\n    }));\n  }\n\n  /**\n   * Handle mobile overlay click\n   */\n  _handleOverlayClick() {\n    this.mobileMenuOpen = false;\n  }\n\n  /**\n   * Render breadcrumbs\n   */\n  _renderBreadcrumbs() {\n    if (!this.showBreadcrumbs || !this.breadcrumbs) return '';\n    \n    const { items = [], current = '' } = this.breadcrumbs;\n    \n    return html`\n      <nav class=\"breadcrumb-nav\">\n        ${items.map((item, index) => html`\n          ${index > 0 ? html`<span> / </span>` : ''}\n          <a href=\"${item.href}\" class=\"breadcrumb-link\">${item.text}</a>\n        `)}\n        ${current ? html`<span> / </span><span>${current}</span>` : ''}\n      </nav>\n    `;\n  }\n\n  /**\n   * Get default user menu items\n   */\n  _getDefaultUserMenuItems() {\n    return [\n      { id: 'profile', text: 'View Profile', icon: 'user' },\n      { id: 'settings', text: 'Settings', icon: 'settings' },\n      { id: 'help', text: 'Help & Support', icon: 'help-circle' },\n      { id: 'logout', text: 'Sign Out', icon: 'log-out' }\n    ];\n  }\n\n  render() {\n    const menuItems = this.userMenuItems.length > 0 \n      ? this.userMenuItems \n      : this._getDefaultUserMenuItems();\n    \n    return html`\n      <div class=\"dashboard-container\">\n        <!-- Header -->\n        <header class=\"dashboard-header\">\n          <div class=\"header-left\">\n            <!-- Mobile menu toggle -->\n            <neo-button \n              class=\"mobile-menu-toggle\"\n              variant=\"ghost\" \n              size=\"sm\"\n              @click=\"${this._toggleMobileMenu}\">\n              <neo-icon name=\"menu\"></neo-icon>\n            </neo-button>\n\n            <!-- Logo -->\n            <a href=\"/\" class=\"logo-section\">\n              ${this.logo ? html`\n                <img src=\"${this.logo}\" alt=\"Logo\" class=\"logo-image\">\n              ` : html`\n                <span class=\"logo-text\">${this.logoText}</span>\n              `}\n            </a>\n          </div>\n          \n          <!-- Search -->\n          <div class=\"header-center\">\n            ${this.showSearch ? html`\n              <div class=\"search-section\">\n                <neo-search-bar\n                  placeholder=\"Search...\"\n                  shortcuts=\"⌘K\"\n                  show-suggestions\n                  @neo-search=\"${this._handleSearch}\">\n                </neo-search-bar>\n              </div>\n            ` : ''}\n          </div>\n          \n          <!-- User controls -->\n          <div class=\"header-right\">\n            <!-- Quick actions -->\n            ${this.quickActions.length > 0 ? html`\n              <div class=\"quick-actions\">\n                ${this.quickActions.map(action => html`\n                  <neo-button \n                    variant=\"ghost\" \n                    size=\"sm\"\n                    title=\"${action.title || action.text}\"\n                    @click=\"${(e) => this._handleQuickAction(action, e)}\">\n                    <neo-icon name=\"${action.icon}\"></neo-icon>\n                  </neo-button>\n                `)}\n              </div>\n            ` : ''}\n            \n            <!-- User controls -->\n            <div class=\"user-controls\">\n              <!-- Notifications -->\n              ${this.showNotifications ? html`\n                <div class=\"notification-button\">\n                  <neo-badge-counter\n                    count=\"${this.notificationCount}\"\n                    variant=\"error\"\n                    size=\"sm\"\n                    ?hide-on-zero=\"${true}\"\n                    clickable\n                    @neo-badge-click=\"${this._handleNotificationClick}\">\n                  </neo-badge-counter>\n                  <neo-button variant=\"ghost\" size=\"sm\">\n                    <neo-icon name=\"bell\"></neo-icon>\n                  </neo-button>\n                </div>\n              ` : ''}\n              \n              <!-- User menu -->\n              ${this.user ? html`\n                <div class=\"user-menu-container\">\n                  <button \n                    class=\"user-menu-trigger\"\n                    @click=\"${this._toggleUserMenu}\"\n                    aria-expanded=\"${this._isUserMenuOpen}\"\n                    aria-haspopup=\"true\">\n                    <neo-user-profile-summary\n                      .user=\"${this.user}\"\n                      layout=\"compact\"\n                      size=\"sm\"\n                      ?show-status=\"${false}\"\n                      ?show-role=\"${false}\">\n                    </neo-user-profile-summary>\n                  </button>\n                  \n                  ${this._isUserMenuOpen ? html`\n                    <div class=\"user-menu\">\n                      <div class=\"user-menu-header\">\n                        <neo-user-profile-summary\n                          .user=\"${this.user}\"\n                          layout=\"horizontal\"\n                          size=\"sm\"\n                          ?show-status=\"${true}\"\n                          ?show-role=\"${true}\">\n                        </neo-user-profile-summary>\n                      </div>\n                      \n                      ${menuItems.map(item => html`\n                        ${item.divider ? html`\n                          <div class=\"user-menu-divider\"></div>\n                        ` : html`\n                          <button \n                            class=\"user-menu-item\"\n                            @click=\"${(e) => this._handleUserMenuAction(item.id, e)}\">\n                            <neo-icon name=\"${item.icon}\"></neo-icon>\n                            <span>${item.text}</span>\n                          </button>\n                        `}\n                      `)}\n                    </div>\n                  ` : ''}\n                </div>\n              ` : html`\n                <neo-button variant=\"ghost\" size=\"sm\">\n                  <neo-icon name=\"user\"></neo-icon>\n                </neo-button>\n              `}\n            </div>\n          </div>\n        </header>\n\n        <!-- Sidebar -->\n        <aside class=\"dashboard-sidebar\">\n          <div class=\"sidebar-content\">\n            ${this.navigationItems.length > 0 ? html`\n              <div class=\"sidebar-section\">\n                <div class=\"section-title\">Navigation</div>\n                <div class=\"navigation-items\">\n                  ${this.navigationItems.map(item => html`\n                    <neo-navigation-link\n                      href=\"${item.href}\"\n                      text=\"${item.text}\"\n                      icon=\"${item.icon || ''}\"\n                      ?active=\"${item.href === this.currentPage || item.active}\"\n                      badge=\"${item.badge || ''}\"\n                      badge-variant=\"${item.badgeVariant || 'primary'}\"\n                      @neo-navigation-click=\"${this._handleNavigation}\">\n                    </neo-navigation-link>\n                  `)}\n                </div>\n              </div>\n            ` : ''}\n          </div>\n          \n          <!-- Sidebar toggle -->\n          <button \n            class=\"sidebar-toggle\"\n            @click=\"${this._toggleSidebar}\"\n            title=\"${this.sidebarCollapsed ? 'Expand sidebar' : 'Collapse sidebar'}\">\n            <neo-icon \n              name=\"chevron-left\" \n              class=\"toggle-icon\">\n            </neo-icon>\n          </button>\n        </aside>\n\n        <!-- Main content -->\n        <main class=\"dashboard-main\">\n          <!-- Page header -->\n          <div class=\"main-header\">\n            <h1 class=\"page-title\">\n              <slot name=\"page-title\">Dashboard</slot>\n            </h1>\n            ${this._renderBreadcrumbs()}\n          </div>\n          \n          <!-- Main content area -->\n          <div class=\"main-content\">\n            <slot></slot>\n          </div>\n        </main>\n      </div>\n      \n      <!-- Mobile overlay -->\n      <div \n        class=\"mobile-overlay\"\n        @click=\"${this._handleOverlayClick}\">\n      </div>\n    `;\n  }\n}\n\n// Register the component\nif (!customElements.get(\"neo-dashboard-layout\")) {\n  customElements.define(\"neo-dashboard-layout\", NeoDashboardLayout);\n}