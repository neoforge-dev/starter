apiVersion: v1
kind: Secret
metadata:
  name: app-secret
  namespace: neoforge
  labels:
    app.kubernetes.io/name: neoforge-app-secret
    app.kubernetes.io/instance: neoforge-app-secret
    app.kubernetes.io/component: secrets
    app.kubernetes.io/part-of: neoforge
type: Opaque
data:
  # Database connection string
  # Base64 encoded: postgresql+asyncpg://postgres:your_secure_db_password@postgres:5432/neoforge
  DATABASE_URL: cG9zdGdyZXNxbCthc3luY3BnOi8vcG9zdGdyZXM6eW91cl9zZWN1cmVfZGJfcGFzc3dvcmRAcG9zdGdyZXM6NTQzMi9uZW9mb3JnZQ==

  # Redis connection string
  # Base64 encoded: redis://redis:6379/0
  REDIS_URL: cmVkaXM6Ly9yZWRpczozNzI5OC9yZWRpcy1wcm9kLXBhc3N3b3JkLTIwMjQ6NjM3OS8w

  # Application secret key (32 characters minimum)
  # Base64 encoded: your_super_secret_key_change_in_production_32_chars_min
  SECRET_KEY: eW91cl9zdXBlcl9zZWNyZXRfa2V5X2NoYW5nZV9pbl9wcm9kdWN0aW9uXzMyX2NoYXJzX21pbg==

  # JWT secret key (32 characters minimum)
  # Base64 encoded: jwt_secret_key_change_in_production_32_chars_minimum
  JWT_SECRET_KEY: and0X3NlY3JldF9rZXlfY2hhbmdlX2luX3Byb2R1Y3Rpb25fMzJfY2hhcnNfbWluaW11bQ==

  # SMTP password for email sending
  # Base64 encoded: your_smtp_password_here
  SMTP_PASSWORD: eW91cl9zbXRwX3Bhc3N3b3JkX2hlcmU=

  # PostgreSQL database credentials
  # Base64 encoded: postgres
  POSTGRES_USER: cG9zdGdyZXM=
  # Base64 encoded: your_secure_db_password
  POSTGRES_PASSWORD: eW91cl9zZWN1cmVfZGJfcGFzc3dvcmQ=
  # Base64 encoded: neoforge
  POSTGRES_DB: bmVvZm9yZ2U=

  # Redis password (if using auth)
  # Base64 encoded: redis-prod-password-2024
  REDIS_PASSWORD: cmVkaXMtcHJvZC1wYXNzd29yZC0yMDI0

  # Third-party API keys (examples)
  # Base64 encoded: your_sendgrid_api_key
  SENDGRID_API_KEY: eW91cl9zZW5kZ3JpZF9hcGlfa2V5
  # Base64 encoded: your_stripe_secret_key
  STRIPE_SECRET_KEY: eW91cl9zdHJpcGVfc2VjcmV0X2tleQ==
  # Base64 encoded: your_oauth_client_secret
  OAUTH_CLIENT_SECRET: eW91cl9vYXV0aF9jbGllbnRfc2VjcmV0

  # Database encryption key
  # Base64 encoded: your_32_char_database_encryption_key
  DB_ENCRYPTION_KEY: eW91cl8zMl9jaGFyX2RhdGFiYXNlX2VuY3J5cHRpb25fa2V5

  # Session encryption key
  # Base64 encoded: your_session_encryption_key_32_chars
  SESSION_ENCRYPTION_KEY: eW91cl9zZXNzaW9uX2VuY3J5cHRpb25fa2V5XzMyX2NoYXJz

  # File upload security key
  # Base64 encoded: your_file_upload_security_key_here
  FILE_UPLOAD_SECRET: eW91cl9maWxlX3VwbG9hZF9zZWN1cml0eV9rZXlfaGVyZQ==

  # Webhook signing secrets (examples)
  # Base64 encoded: your_stripe_webhook_secret
  STRIPE_WEBHOOK_SECRET: eW91cl9zdHJpcGVfd2ViaG9va19zZWNyZXQ=
  # Base64 encoded: your_github_webhook_secret
  GITHUB_WEBHOOK_SECRET: eW91cl9naXRodWJfd2ViaG9va19zZWNyZXQ=
---
# TLS certificates secret (managed by cert-manager)
apiVersion: v1
kind: Secret
metadata:
  name: neoforge-tls-cert
  namespace: neoforge
  labels:
    app.kubernetes.io/name: neoforge-tls-cert
    app.kubernetes.io/instance: neoforge-tls-cert
    app.kubernetes.io/component: tls
    app.kubernetes.io/part-of: neoforge
type: kubernetes.io/tls
# cert-manager will populate tls.crt and tls.key
---
# API TLS certificate
apiVersion: v1
kind: Secret
metadata:
  name: neoforge-api-tls-cert
  namespace: neoforge
  labels:
    app.kubernetes.io/name: neoforge-api-tls-cert
    app.kubernetes.io/instance: neoforge-api-tls-cert
    app.kubernetes.io/component: tls
    app.kubernetes.io/part-of: neoforge
type: kubernetes.io/tls
---
# Staging TLS certificate
apiVersion: v1
kind: Secret
metadata:
  name: neoforge-staging-tls-cert
  namespace: neoforge-staging
  labels:
    app.kubernetes.io/name: neoforge-staging-tls-cert
    app.kubernetes.io/instance: neoforge-staging-tls-cert
    app.kubernetes.io/component: tls
    app.kubernetes.io/part-of: neoforge
    environment: staging
type: kubernetes.io/tls
---
# Monitoring TLS certificate
apiVersion: v1
kind: Secret
metadata:
  name: neoforge-monitoring-tls-cert
  namespace: neoforge-monitoring
  labels:
    app.kubernetes.io/name: neoforge-monitoring-tls-cert
    app.kubernetes.io/instance: neoforge-monitoring-tls-cert
    app.kubernetes.io/component: tls
    app.kubernetes.io/part-of: neoforge
type: kubernetes.io/tls
---
# Basic auth secret for staging
apiVersion: v1
kind: Secret
metadata:
  name: staging-basic-auth
  namespace: neoforge-staging
  labels:
    app.kubernetes.io/name: staging-basic-auth
    app.kubernetes.io/instance: staging-basic-auth
    app.kubernetes.io/component: auth
    app.kubernetes.io/part-of: neoforge
    environment: staging
type: Opaque
data:
  # Base64 encoded: admin:$2y$10$... (generated with htpasswd)
  # Example: htpasswd -c auth admin
  auth: YWRtaW46JGFwcjEkSDZsaUguOGkkLjhzSFBFZjAvVXVwOFVueDR1OHpIMQ==
---
# Basic auth secret for monitoring
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-basic-auth
  namespace: neoforge-monitoring
  labels:
    app.kubernetes.io/name: monitoring-basic-auth
    app.kubernetes.io/instance: monitoring-basic-auth
    app.kubernetes.io/component: auth
    app.kubernetes.io/part-of: neoforge
type: Opaque
data:
  # Base64 encoded: monitor:$2y$10$... (generated with htpasswd)
  auth: bW9uaXRvcjokYXByMSRINmxpSC44aSQuOHNIUEVmMC9VdXA4VW54NHU4eEgx
