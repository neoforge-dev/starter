version: "3.8"

services:
  api:
    build:
      context: .
      target: development
      dockerfile: Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - environment=development
      - debug=1
      - secret_key=dev_secret_key_replace_in_production_7e1a34bd93b148f0
      - database_url=postgresql+asyncpg://postgres:postgres@db:5432/app
      - redis_url=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  migrate:
    build:
      context: .
      target: production
    command: bash -c "python -m alembic upgrade head"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PYTHONPATH=/app
      - environment=development
      - debug=1
      - secret_key=dev_secret_key_replace_in_production_7e1a34bd93b148f0
      - database_url=postgresql://postgres:postgres@db:5432/test_db
      - redis_url=redis://redis:6379/0
    volumes:
      - .:/app

  db:
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    ports:
      - "6382:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  test:
    build:
      context: .
      target: development
      dockerfile: Dockerfile
      args:
        BUILDKIT_INLINE_CACHE: 1
    volumes:
      - .:/app
      - .pytest_cache:/app/.pytest_cache
    tmpfs:
      - /tmp
    environment:
      - PYTHONPATH=/app
      - environment=test
      - debug=1
      - testing=1
      - SECRET_KEY=test_secret_key_replace_in_production_7e1a34bd93b148f0
      - database_url=postgresql+asyncpg://postgres:postgres@db:5432/test_db
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/test_db
      - database_url_for_env=postgresql+asyncpg://postgres:postgres@db:5432/test_db
      - DATABASE_URL_FOR_ENV=postgresql+asyncpg://postgres:postgres@db:5432/test_db
      - redis_url=redis://redis:6379/1
      - REDIS_URL=redis://redis:6379/1
      - COVERAGE_FILE=/tmp/.coverage
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - JWT_ALGORITHM=HS256
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      bash -c "
        python -m pytest -v --cov=app --cov-report=term-missing
      "

volumes:
  postgres_data:
  .pytest_cache:
